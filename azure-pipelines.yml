# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to
# a PyPI-compatible index, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/python

variables:
  package_name: tike

trigger:
- master
- release-*

jobs:

- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4
  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - bash: >
      conda create --yes --quiet --name $(package_name)
      python=$(python.version)
      conda-build
      conda-verify
      pycodestyle
      pydocstyle
    displayName: Create Anaconda environment
  - bash: |
      source activate $(package_name)
      pycodestyle --count -v .
    displayName: Run python code linter
  - bash: |
      source activate $(package_name)
      pydocstyle --match='(?!utils).*\.py' --count -v src/$(package_name)/
    displayName: Run python docstring linter
  - bash: |
      source activate $(package_name)
      conda build . --no-anaconda-upload -c conda-forge
    displayName: Conda build

- job: macOS
  pool:
    vmImage: 'xcode9-macos10.13'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
    maxParallel: 4
  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
  - bash: >
      conda create --yes --quiet --name $(package_name)
      python=$(python.version)
      conda-build
      conda-verify
    displayName: Create Anaconda environment
  - bash: |
      source activate $(package_name)
      conda build . --no-anaconda-upload -c conda-forge
    displayName: Conda build

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
    maxParallel: 4
  steps:
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH
  - script: >
      conda create --yes --quiet --name $(package_name)
      python=$(python.version)
      conda-build
      conda-verify
    displayName: Create Anaconda environment
  - script: |
      call activate $(package_name)
      conda build . --no-anaconda-upload -c conda-forge -c anaconda
    displayName: Conda build
